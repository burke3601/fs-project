[{"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Graph.jsx":"1","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Dashboard.jsx":"2","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Home.jsx":"3","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Login.jsx":"4","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Sidebar.jsx":"5","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Weather.jsx":"6","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/App.js":"7"},{"size":2917,"mtime":1613083033489,"results":"8","hashOfConfig":"9"},{"size":6667,"mtime":1613083033487,"results":"10","hashOfConfig":"9"},{"size":824,"mtime":1613083033491,"results":"11","hashOfConfig":"9"},{"size":3423,"mtime":1613098333232,"results":"12","hashOfConfig":"9"},{"size":1531,"mtime":1613083033496,"results":"13","hashOfConfig":"9"},{"size":2423,"mtime":1613083033498,"results":"14","hashOfConfig":"9"},{"size":7499,"mtime":1613099840892,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"zqxw68",{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Graph.jsx",["33","34","35","36","37","38"],"import React, { useEffect } from 'react'\nimport {Line} from 'react-chartjs-2'\nimport './App.css';\n\n\n\nfunction Graph(props){\n        console.log(props)\n        console.log(props.data)\n        if (props && props.data && props.data.map){\n          let filteredDates = []\n          let newDates =[]\n          let dates = []\n          //gets times\n          props.data.map(a=>{\n            dates.push(a.timeStamp)\n\n            // filteredDates = dates.filter((val, index) => dates.indexOf(val) === index)\n            })\n            dates.map(a=>{\n              let b = a.slice(5,16)\n              let c = b.replace(\"T\", \" \")\n              newDates.push(c)\n            })\n\n          console.log(newDates)\n          let est = []\n          let newEst = []\n          //gets stations\n          props.data.map(a=>{ \n            est.push(a.station)\n            newEst = est.filter((val, index) => est.indexOf(val) === index)\n          })\n          console.log(newEst)\n          let levels = []\n          newEst.forEach(el=>{\n           // console.log(el)\n            let lev = []\n            for(let i=0; i < props.data.length; i++){\n              \n              if(props.data[i].station == el){\n                lev.push(props.data[i].level)\n              }\n            }levels.push(lev)\n            console.log(levels)\n            \n          })\n          \n   \n    const state = {\n        \n        labels: newDates,\n        datasets: newEst.map((sta, index) =>{\n        \n            const r = Math.floor(Math.random() * 256)\n            const g = Math.floor(Math.random() * 256)\n            const b = Math.floor(Math.random() * 256)\n            \n            const color  = [r,b,g]\n          \n\n           \n\n          return {\n            \n            label: sta,\n            fill: true,\n            lineTension: 0.5,\n            backgroundColor: `rgba(${color},.1)`,\n            borderColor: `rgba(${color},2)`,\n            borderWidth: 2,\n            data: levels[index]\n          }\n        }),\n      }\n      \n    \n      return (\n        \n       \n       \n        <div className=\"graph\" >\n        \n          <Line\n            data={state}\n            height={400}\n            width={600}\n              options={{\n                  maintainAspectRatio: true,\n                  scales: {\n                      yAxes: [{\n                          ticks: {\n                            beginAtZero: true,\n                            suggestedMax: 20    \n                          }\n                      }],\n                      xAxes: [{\n                        ticks: {\n                          autoSkip: true,\n                          maxTicksLimit: 10,\n                          beginAtZero: true\n                            \n                        }\n                    }]\n                  }\n              }}\n\n          />\n        </div>\n        \n        )\n    }else{\n      return null\n    }\n}\n  \n    \n\n\n\nexport default Graph",["39","40"],"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Dashboard.jsx",["41","42","43","44"],"import React from 'react'\nimport Sidebar from './Sidebar'\nimport Graph from './Graph'\n\nimport {useState, useEffect} from 'react'\nimport Api from './Api'\nimport Weather from './Weather'\n\nimport { \n   \n  Link,\n \n} from 'react-router-dom';\n\nimport TimeButton from './TimeButton'\n\n\n\nfunction Dashboard(props){\n\n  let num = parseInt(props.count)\n  console.log(props.data)\n  let alertColor = ''\n  let alertMessage = ''\n  if(props && props.data && props.data[0].station === (props.data[1].station)){\n    console.log(props.data[props.data.length - 1].level)\n    if(props.data[props.data.length - 1].level <= 7){\n       alertColor = \"green\"\n       alertMessage = \"Alerta VERDE\"\n    } else if (props.data[props.data.length - 1].level > 7 && props.data[props.data.length - 1].level <= 14){\n      alertColor = \"orange\"\n      alertMessage = \"Alerta NARANJA\"\n    }else if (props.data[props.data.length - 1].level > 20){\n      alertColor = \"red\"\n      alertMessage = \"Alerta ROJA\"\n    }\n    console.log(alertColor)\n  console.log(props.count)\n    \n  return(\n        \n        \n        <div className='dashboard' style={props.toggle ? {gridColumn: '4/13'}:{gridColumn: '1/13'}}>\n\n\n                <div >\n                  <Weather \n                    data = {props.data}\n                    fetchWeather = {props.fetchWeather}\n                    weather={props.weather}\n                  />\n                </div>\n                <div className=\"dashboardbuttons\">\n               \n\n                    <div  className=\"alertBox\">\n                      \n\n                    <h3  className=\"alert\" style={{backgroundColor: alertColor}}>\n                      {alertMessage} nivel: {props.data[props.data.length - 1].level}\n                    </h3><h3>Estacion: {props.data[0].station}</h3>\n                    <h3>Mostrando ultimas:  </h3>  \n                  </div>\n                    <br/>\n                    <Link>\n                      <TimeButton \n                        data = {props.data}\n                        handleClick = {(e) => {\n                          props.addHour(props.data[0].station)\n                        }}\n                        //count = {props.count}\n                        text = {\"+\"}>\n                      </TimeButton>\n                    </Link>\n                    <h2>\n                      {num}\n                    </h2>\n                    <Link to='/graphs'>\n                      <TimeButton \n                        data = {props.data}\n                        handleClick = {(e) => {\n                          props.subtractHour(props.count, props.data[0].station)\n                        }}\n                        count = {props.count}\n                        text = {\"-\"}>\n                      </TimeButton>\n                    </Link>\n                    <br/>\n                    <h3>horas</h3>\n                  \n                  <div className = \"extendedperiodbuttons\">\n                      <Link to='/graphs'>\n                        <TimeButton \n                          data = {props.data}\n                          handleClick = {(e) => {\n                            props.setCount(1)\n                            props.getDay(\"day\", props.data[0].station)\n                            }}\n                          count = {props.count}\n                          text = {\"Dia\"}>\n                        </TimeButton>\n                        <TimeButton \n                          data = {props.data}\n                          handleClick = {(e) => {\n                            props.setCount(1)\n                            props.getDay(\"week\", props.data[0].station)\n                            }}\n                          count = {props.count}\n                          text = {\"Semana\"}>\n                        </TimeButton>\n                        <TimeButton \n                          data = {props.data}\n                          handleClick = {(e) => {\n                            props.setCount(1)\n                            props.getDay(\"month\", props.data[0].station)\n                            }}\n                          count = {props.count}\n                          text = {\"Mes\"}>\n                        </TimeButton>\n                      </Link>\n\n                              </div>\n                    </div>\n                    \n                 \n                  \n                  \n\n                <div className=\"mainGraph\">\n                    \n                    <Graph \n                    data = {props.data}\n                    \n                    >\n                    </Graph>\n                    \n                </div>\n              </div>\n         \n                  \n\n    )\n                      \n  }else{\n    return(\n    <div className='dashboard' style={props.toggle ? {gridColumn: '4/13'}:{gridColumn: '1/13'}}>\n  <div >\n    <Weather \n      data = {props.data}\n      fetchWeather = {props.fetchWeather}\n      weather={props.weather}\n    />\n  </div>\n  <div className=\"dashboardbuttons\">\n    <div>\n      \n\n\n      <h3>Mostrando ultimas:</h3>\n      <br/>\n      <Link>\n        <TimeButton \n          data = {props.data}\n          handleClick = {(e) => {props.addHour(props.count, props.data[0].river)}}\n          count = {props.count}\n          text = {\"+\"}>\n        </TimeButton>\n      </Link>\n      <h2>\n        {props.count}\n      </h2>\n      <Link to='/graphs'>\n        <TimeButton \n          data = {props.data}\n          handleClick = {(e) => {props.subtractHour(props.count, props.data[0].river)}}\n          count = {props.count}\n          text = {\"-\"}>\n        </TimeButton>\n      </Link>\n      <br/>\n      <h3>horas</h3>\n    </div>\n    <div className = \"extendedperiodbuttons\">\n    <Link to='/graphs'>\n      <TimeButton \n        data = {props.data}\n        handleClick = {(e) => {\n          props.setCount(1)\n          props.getDay(\"day\", props.data[0].river)\n         }}\n        count = {props.count }\n        text = {\"Dia\"}>\n      </TimeButton>\n      <TimeButton \n        data = {props.data}\n        handleClick = {(e) => {\n          props.setCount(1)\n          props.getDay(\"week\", props.data[0].river)\n          }}\n        count = {props.count }\n        text = {\"Semana\"}>\n      </TimeButton>\n      <TimeButton \n        data = {props.data}\n        handleClick = {(e) => {\n          props.setCount(1)\n          props.getDay(\"month\", props.data[0].river)\n          }}\n        count = {props.count}\n        text = {\"Mes\"}>\n      </TimeButton>\n    </Link>\n\n\n      </div>\n    </div>\n  <div className=\"mainGraph\">\n      \n      <Graph \n      data = {props.data}\n      \n      >\n      </Graph>\n      \n  </div>\n  \n</div>\n\n\n)\n        }    \n}\n\n  \n\n\n\n\nexport default Dashboard","/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Home.jsx",["45","46","47"],"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Login.jsx",["48","49","50","51","52","53","54","55"],"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Sidebar.jsx",["56","57","58","59","60"],"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/Weather.jsx",["61","62","63"],"/Users/briansummerset/DigitalCrafts/capstone-project/fs-project/client/src/App.js",["64","65","66","67","68","69","70","71","72","73","74","75"],{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":11,"column":15,"nodeType":"78","messageId":"79","endLine":11,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":15,"column":27,"nodeType":"83","messageId":"84","endLine":15,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":20,"column":24,"nodeType":"83","messageId":"84","endLine":20,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":30,"column":27,"nodeType":"83","messageId":"84","endLine":30,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":41,"column":40,"nodeType":"87","messageId":"88","endLine":41,"endColumn":42},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"76","severity":1,"message":"93","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":15},{"ruleId":"76","severity":1,"message":"94","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":5,"column":19,"nodeType":"78","messageId":"79","endLine":5,"endColumn":28},{"ruleId":"76","severity":1,"message":"95","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":11},{"ruleId":"76","severity":1,"message":"77","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"94","line":1,"column":26,"nodeType":"78","messageId":"79","endLine":1,"endColumn":34},{"ruleId":"76","severity":1,"message":"95","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":11},{"ruleId":"76","severity":1,"message":"94","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"96","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"97","line":4,"column":22,"nodeType":"78","messageId":"79","endLine":4,"endColumn":28},{"ruleId":"76","severity":1,"message":"98","line":5,"column":5,"nodeType":"78","messageId":"79","endLine":5,"endColumn":9},{"ruleId":"76","severity":1,"message":"99","line":6,"column":5,"nodeType":"78","messageId":"79","endLine":6,"endColumn":11},{"ruleId":"76","severity":1,"message":"100","line":7,"column":5,"nodeType":"78","messageId":"79","endLine":7,"endColumn":10},{"ruleId":"76","severity":1,"message":"101","line":8,"column":5,"nodeType":"78","messageId":"79","endLine":8,"endColumn":13},{"ruleId":"76","severity":1,"message":"102","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":16},{"ruleId":"76","severity":1,"message":"94","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"103","line":4,"column":7,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":21,"column":29,"nodeType":"106","endLine":21,"endColumn":112},{"ruleId":"104","severity":1,"message":"105","line":28,"column":29,"nodeType":"106","endLine":28,"endColumn":118},{"ruleId":"104","severity":1,"message":"105","line":36,"column":29,"nodeType":"106","endLine":36,"endColumn":118},{"ruleId":"76","severity":1,"message":"95","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":11},{"ruleId":"76","severity":1,"message":"94","line":3,"column":9,"nodeType":"78","messageId":"79","endLine":3,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":3,"column":19,"nodeType":"78","messageId":"79","endLine":3,"endColumn":28},{"ruleId":"76","severity":1,"message":"107","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"108","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":11},{"ruleId":"76","severity":1,"message":"95","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":11},{"ruleId":"76","severity":1,"message":"109","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":23},{"ruleId":"76","severity":1,"message":"98","line":18,"column":3,"nodeType":"78","messageId":"79","endLine":18,"endColumn":7},{"ruleId":"76","severity":1,"message":"110","line":30,"column":7,"nodeType":"78","messageId":"79","endLine":30,"endColumn":10},{"ruleId":"76","severity":1,"message":"111","line":82,"column":10,"nodeType":"78","messageId":"79","endLine":82,"endColumn":14},{"ruleId":"76","severity":1,"message":"112","line":82,"column":16,"nodeType":"78","messageId":"79","endLine":82,"endColumn":23},{"ruleId":"76","severity":1,"message":"113","line":83,"column":10,"nodeType":"78","messageId":"79","endLine":83,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":93,"column":5,"nodeType":"116","endLine":93,"endColumn":12,"suggestions":"117"},{"ruleId":"76","severity":1,"message":"118","line":163,"column":9,"nodeType":"78","messageId":"79","endLine":163,"endColumn":18},{"ruleId":"76","severity":1,"message":"119","line":171,"column":13,"nodeType":"78","messageId":"79","endLine":171,"endColumn":17},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'filteredDates' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'Sidebar' is defined but never used.","'useState' is defined but never used.","'Api' is defined but never used.","'Home' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'render' is defined but never used.","'center' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Graph' is defined but never used.","'Map' is defined but never used.","'NavbarBootstrap' is defined but never used.","'api' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'station'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'logginout' is assigned a value but never used.","'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [count, station]",{"range":"125","text":"126"},[1933,1940],"[count, station]"]